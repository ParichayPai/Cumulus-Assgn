{"version":3,"sources":["components/movieCard.jsx","components/header.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","margin","media","height","body","learnMore","float","MovieCard","data","movie","classes","Card","className","CardActionArea","CardMedia","image","Poster","title","CardContent","Typography","gutterBottom","variant","component","Title","length","substring","color","Plot","CardActions","IconButton","aria-label","Button","size","Header","App","props","handlePageClick","e","selectedPage","selected","offset","state","perPage","setState","currentPage","getData","searchBox","titles","searchText","bind","axios","method","url","then","res","postData","slice","map","index","pageCount","Math","ceil","this","text","moviesList","filter","mov","toLowerCase","startsWith","console","log","type","placeholder","onChange","handleChange","target","value","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80675249.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { IconButton } from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    margin: 50\r\n  },\r\n  media: {\r\n    height: 500,\r\n  },\r\n  body:{\r\n    height: 100\r\n  },\r\n  learnMore: {\r\n    float: \"auto\"\r\n  }\r\n});\r\n\r\nexport default function MovieCard(data) {\r\n    const {movie} = data;      \r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n        <CardActionArea>\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={movie.Poster}\r\n                title=\"Movie\"\r\n            />\r\n            <CardContent className={classes.body}>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                { movie.Title.length < 25 ? movie.Title: `${movie.Title.substring(0,25)}...`}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {`${movie.Plot.substring(0,100)}...`}\r\n            </Typography>\r\n            </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n            <IconButton aria-label=\"add to favorites\">\r\n                <FavoriteIcon />\r\n            </IconButton>\r\n            <Button size=\"small\" color=\"primary\" className={classes.learnMore}>\r\n                Learn More\r\n            </Button>\r\n        </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Header(){\r\n    return (\r\n        <>\r\n        <h1>Cumulus Movie API</h1>\r\n        </>\r\n    )\r\n}","import axios from 'axios';\r\nimport React from 'react';\r\nimport ReactPaginate from 'react-paginate'\r\nimport './App.css';\r\nimport MovieCard from './components/movieCard';\r\nimport Header from './components/header'\r\n\r\nconst url = 'http://localhost:5000/';\r\n\r\nclass App extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      offset: 0,\r\n      data: [],\r\n      perPage: 10,\r\n      currentPage: 0,\r\n      searchBox: [],\r\n      titles: [],\r\n      searchText: \"\"\r\n    };\r\n\r\n    this.handlePageClick = this.handlePageClick.bind(this);\r\n  }\r\n\r\n  getData() {\r\n    axios({\r\n      method: 'GET',\r\n      url: url+'home'\r\n    }).then(res => {\r\n      // console.log(res.data)\r\n      // setData(d.data.data)\r\n      const data = res.data.data;\r\n      const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\r\n      const postData = slice.map((movie, index) => <MovieCard key={index} movie={movie} />)\r\n      const titles = data.map(movie => movie.Title);\r\n\r\n      this.setState({\r\n          pageCount: Math.ceil(data.length / this.state.perPage),\r\n          postData,\r\n          titles\r\n      });\r\n    })\r\n  }\r\n\r\n  handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.state.perPage;\r\n\r\n    this.setState({\r\n        currentPage: selectedPage,\r\n        offset: offset\r\n    }, () => {\r\n        this.getData()\r\n    });\r\n\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  handleChange(text) {\r\n    this.setState({searchText: text});\r\n    const moviesList = this.state.titles.filter((mov) =>\r\n      mov.toLowerCase().startsWith(text.toLowerCase())\r\n    );\r\n    console.log(moviesList);\r\n    this.setState({searchBox: moviesList})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        \r\n        <div className=\"search\">\r\n        <input type=\"text\" className=\"searchBar\" placeholder=\"Seach for a movie...\" \r\n          onChange={e => this.handleChange(e.target.value)\r\n        } \r\n        />\r\n        {this.state.searchBox.length > 0 && this.state.searchText ? \r\n          <div className=\"searchBox\">\r\n            {this.state.searchBox.map(title => <div className=\"searchItems\">{title}</div>)}\r\n          </div> \r\n        : null}\r\n        </div>\r\n\r\n        <div className=\"data\">\r\n          {this.state.postData}\r\n        </div>\r\n        <div className=\"pagination\">\r\n          <ReactPaginate\r\n              previousLabel={\"prev\"}\r\n              nextLabel={\"next\"}\r\n              breakLabel={\"...\"}\r\n              breakClassName={\"break-me\"}\r\n              pageCount={this.state.pageCount}\r\n              marginPagesDisplayed={2}\r\n              pageRangeDisplayed={5}\r\n              onPageChange={this.handlePageClick}\r\n              containerClassName={\"pagination\"}\r\n              subContainerClassName={\"pages pagination\"}\r\n              activeClassName={\"active\"}\r\n            />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}